version: '3'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongo1:27017/DB_NAME?replicaSet=rs0
    ports:
      - 8080:8080
    depends_on:
      - mongo1
      - es
    links:
      - mongo1

#  db:
#    container_name: mongodb
#    image: mongo:4.2.5
##    environment:
##      - MONGO_INITDB_DATABASE=memegle
##      - MONGO_INITDB_ROOT_USERNAME=memegle
##      - MONGO_INITDB_ROOT_PASSWORD=memegle
#    volumes:
##      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
#      - mongodata:/data/db
#    ports:
#      - 27017:27017
  mongo1:
    hostname: mongo1
    container_name: localmongo1
    image: mongo:4.0-xenial
    expose:
      - 27017
    ports:
      - 27017:27017
    restart: always
    volumes:
      - rs1:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

# https://medium.com/@TimvanBaarsen/how-to-run-an-elasticsearch-7-x-single-node-cluster-for-local-development-using-docker-compose-2b7ab73d8b82
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

volumes:
  rs1:
  elasticsearch-data:
    driver: local