version: '3.6'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - 3000:3000
    depends_on:
      - server
    restart: on-failure
    entrypoint: ["serve", "-s", "build", "-l", "3000"]

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    volumes:
      - ./server/data/processed:/root/memegle/images
    environment:
      - ES_HOST=vpc-memegle-y2a7bejqpqmflccfhwkdrpeg7q.us-west-1.es.amazonaws.com
      - ES_PORT=443
      - MEMEGLE_APP_MODE=production
    env_file:
      - ./scripts/env/mongo-auth.env
      - ./scripts/env/es-auth.env
    ports:
      - 8080:8080
    links:
      - mongo1
    entrypoint: ["catalina.sh", "run"]

  mongo1:
    hostname: mongo1
    container_name: mongo1
    image: mongo:4.0-xenial
    expose:
      - 27017
    ports:
      - 27017:27017
    restart: unless-stopped
    env_file:
      - ./scripts/env/mongo-auth.env
    volumes:
      - rs1:/data/db
    command: "--bind_ip_all --replSet rs"

  init_mongo_rs:
    image: mongo:4.0-xenial
    links:
      - mongo1
    depends_on:
      - mongo1
    env_file:
      - ./scripts/env/mongo-auth.env
    volumes:
      - ./scripts:/scripts
    entrypoint: ["sh", "/scripts/mongo_init.sh"]


  # https://rwynn.github.io/monstache-site/start/
#  monstache:
#    image: rwynn/monstache:rel6
#    container_name: monstache
#    working_dir: /app
#    command: -f ./monstache.config.toml
#    volumes:
#      - ./monstache.config.toml:/app/monstache.config.toml
#    depends_on:
#      - init_mongo_rs
#    env_file:
#      - ./scripts/env/monstache-cfg.env
#    ports:
#      - 8081:8080     # host-port:container-port
#    links:
#      - mongo1:mongo1
#    restart: always

volumes:
  rs1: